/* Generated By:JavaCC: Do not edit this line. as2jConstants.java */
package jason.asSyntax.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface as2jConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VAR = 7;
  /** RegularExpression Id. */
  int TK_TRUE = 8;
  /** RegularExpression Id. */
  int TK_FALSE = 9;
  /** RegularExpression Id. */
  int TK_NOT = 10;
  /** RegularExpression Id. */
  int TK_NEG = 11;
  /** RegularExpression Id. */
  int TK_INTDIV = 12;
  /** RegularExpression Id. */
  int TK_INTMOD = 13;
  /** RegularExpression Id. */
  int TK_BEGIN = 14;
  /** RegularExpression Id. */
  int TK_END = 15;
  /** RegularExpression Id. */
  int TK_LABEL_AT = 16;
  /** RegularExpression Id. */
  int TK_IF = 17;
  /** RegularExpression Id. */
  int TK_ELSE = 18;
  /** RegularExpression Id. */
  int TK_ELIF = 19;
  /** RegularExpression Id. */
  int TK_FOR = 20;
  /** RegularExpression Id. */
  int TK_WHILE = 21;
  /** RegularExpression Id. */
  int TK_PAND = 22;
  /** RegularExpression Id. */
  int TK_POR = 23;
  /** RegularExpression Id. */
  int NUMBER = 24;
  /** RegularExpression Id. */
  int STRING = 25;
  /** RegularExpression Id. */
  int ATOM = 26;
  /** RegularExpression Id. */
  int UNNAMEDVARID = 27;
  /** RegularExpression Id. */
  int UNNAMEDVAR = 28;
  /** RegularExpression Id. */
  int CHAR = 29;
  /** RegularExpression Id. */
  int LETTER = 30;
  /** RegularExpression Id. */
  int LC_LETTER = 31;
  /** RegularExpression Id. */
  int UP_LETTER = 32;
  /** RegularExpression Id. */
  int DIGIT = 33;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<VAR>",
    "\"true\"",
    "\"false\"",
    "\"not\"",
    "\"~\"",
    "\"div\"",
    "\"mod\"",
    "\"begin\"",
    "\"end\"",
    "\"@\"",
    "\"if\"",
    "\"else\"",
    "\"elif\"",
    "\"for\"",
    "\"while\"",
    "\"|&|\"",
    "\"|||\"",
    "<NUMBER>",
    "<STRING>",
    "<ATOM>",
    "<UNNAMEDVARID>",
    "<UNNAMEDVAR>",
    "<CHAR>",
    "<LETTER>",
    "<LC_LETTER>",
    "<UP_LETTER>",
    "<DIGIT>",
    "\"{\"",
    "\"}\"",
    "\":-\"",
    "\".\"",
    "\"!\"",
    "\":\"",
    "\"<-\"",
    "\"+\"",
    "\"-\"",
    "\"^\"",
    "\"?\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"!!\"",
    "\"<\"",
    "\">\"",
    "\"::\"",
    "\",\"",
    "\"[\"",
    "\"|\"",
    "\"]\"",
    "\"&\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"\\\\==\"",
    "\"=\"",
    "\"=..\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
  };

}
